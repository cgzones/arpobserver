name: Main CI

on: [push, pull_request]

jobs:

  build:
    name: (${{ matrix.cc }}) Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cc: [ 'gcc', 'clang-13' ]
    env:
      CC: ${{ matrix.cc }}
    steps:
    - uses: actions/checkout@v2
    - name: install clang repo
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key 2>/dev/null | sudo apt-key add -
        sudo add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main' -y
        sudo apt-get update -q
    - name: install dependencies
      run: sudo apt-get install -y clang-13 libevent-dev libmysqlclient-dev libpcap-dev libsqlite3-dev
    - name: install asciidoctor, check and meson from Debian sid
      run: |
          wget -O - https://ftp-master.debian.org/keys/archive-key-10.asc 2>/dev/null | sudo apt-key add -
          sudo add-apt-repository 'deb http://deb.debian.org/debian/ sid main' -y
          sudo apt-get update -q
          sudo apt-get install -y asciidoctor check meson
    - name: setup
      run: meson setup build -Dwerror=true
    - name: build
      run: meson compile -C build/
    - name: test
      run: meson test -C build/

  weverything_build:
    name: Clang Weverything Build
    runs-on: ubuntu-latest
    env:
      CC: clang-13
      CFLAGS: '-O2 -flto -Weverything -Wno-padded -Wno-gnu-zero-variadic-macro-arguments -Wno-gnu-conditional-omitted-operand -Wno-gnu-statement-expression -Wno-language-extension-token -Wno-disabled-macro-expansion -Wno-reserved-macro-identifier -Wno-reserved-identifier -Wno-error=covered-switch-default'
    steps:
    - uses: actions/checkout@v2
    - name: install clang repo
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key 2>/dev/null | sudo apt-key add -
        sudo add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main' -y
        sudo apt-get update -q
    - name: install dependencies
      run: sudo apt-get install -y clang-13 libevent-dev libmysqlclient-dev libpcap-dev libsqlite3-dev
    - name: install asciidoctor, check and meson from Debian sid
      run: |
          wget -O - https://ftp-master.debian.org/keys/archive-key-10.asc 2>/dev/null | sudo apt-key add -
          sudo add-apt-repository 'deb http://deb.debian.org/debian/ sid main' -y
          sudo apt-get update -q
          sudo apt-get install -y asciidoctor check meson
    - name: setup
      run: meson setup build -Dwerror=true
    - name: build
      run: meson compile -C build/
    - name: test
      run: meson test -C build/

  whitespace_check:
    name: Whitespace Check

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: check-whitespaces
        run: git diff-tree --check $(git hash-object -t tree /dev/null) HEAD

  spelling_check:
    name: Codespell Check

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: install codespell
        run: |
          wget -O - https://ftp-master.debian.org/keys/archive-key-10.asc 2>/dev/null | sudo apt-key add -
          sudo add-apt-repository 'deb http://deb.debian.org/debian/ sid main' -y
          sudo apt-get update -q
          sudo apt-get install -y codespell
      - name: run codespell
        run: codespell -C2 -Lnd,objext,ether --skip .git

  format_check:
    name: Format Check

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: install clang-format
        run: |
            wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key 2>/dev/null | sudo apt-key add -
            sudo add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main' -y
            sudo apt-get update -q
            sudo apt-get install -y clang-format-13
      - name: check format
        run: clang-format-13 -i --Werror src/*.c src/*.h tests/*.c
      - name: check changes
        run: git diff --exit-code

#  cppcheck:
#    name: Cppcheck
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: install cppcheck
#        run: sudo apt-get install -y cppcheck
#      - name: cppcheck
#        #--error-exitcode=2
#        run: cppcheck --enable=warning --force --inconclusive --library=std.cfg --library=posix.cfg --std=c11 --quiet --inline-suppr src/
